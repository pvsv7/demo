pipeline {
    agent any
    stages {
        stage('Run Kafka Connector Status Check') {
            steps {
                script {
                    // Run the script and capture both stdout and exit code
                    def commandOutput = sh(
                        script: '''
                        ./auto-deployment/                   ''',
                        returnStdout: true,
                        returnStatus: true // Captures the exit code
                    )

                    def result = commandOutput.stdout?.trim() // Capture stdout
                    def exitCode = commandOutput.status // Capture exit code

                    // Debug log for result and exit code
                    echo "Script Output: ${result}"
                    echo "Exit Code: ${exitCode}"

                    // Handle the exit code and check for failed connectors
                    if (exitCode == 1) {
                        if (result.contains("Connector Name:")) {
                            currentBuild.result = 'UNSTABLE'
                            echo "Failed connectors found:\n${result}"

                            // Send email notification
                            emailext(
                                subject: "Failed Kafka Connectors Detected",
                                body: "The following Kafka connectors have failed:\n\n${result}",
                                to: EMAIL_RECIPIENT
                            )
                        } else {
                            echo "Error occurred, but no failed connectors reported:\n${result}"
                        }
                    } else if (exitCode == 0) {
                        echo "No failed connectors found:\n${result}"
                    } else {
                        error("Unexpected exit code: ${exitCode}")
                    }

                    echo "Continuing with subsequent steps..."
                }
            }
            post {
                always {
                    echo "Stage completed: Performing final steps if required."
                }
                success {
                    echo "Stage completed successfully: All connectors are operational."
                }
                unstable {
                    echo "Stage marked as UNSTABLE: Issues with connectors detected."
                }
                failure {
                    echo "Stage failed: Script or pipeline error occurred."
                }
            }
        }
    }
    post {
        always {
            echo "Pipeline execution completed: Final cleanup if necessary."
        }
        success {
            echo "Pipeline executed successfully: No issues found."
        }
        unstable {
            echo "Pipeline marked as UNSTABLE: Check logs for details."
        }
        failure {
            echo "Pipeline failed: Investigate the errors in the logs."
        }
    }
}
