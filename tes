```
pipeline {
    agent { label 'runner-1' }
    triggers {
        cron('H * * * *') // Schedule the job to run every hour
    }
    environment {
        ORIGINAL_FILE_PATH = '/home/tenant/connector/Kafka_connectors/kafkaStatus_13-08-24.xlsx'
        TARGET_FILE_PATH = '/home/tenant/workspace/EPDM-Core/epdmappman/Int_Kafka_connector'
        EMAIL_RECIPIENT = 'example.com'
        EMAIL_SUBJECT = 'Kafka Connector status for INT'
        JOB_URL = "${env.JENKINS_URL}job/${env.JOB_NAME}/${env.BUILD_NUMBER}/"
    }

    stages {
        stage('capture the connector status') {
            steps {
                sh '''
                echo "Capture the connector status...!!"
                docker run --name=intconnectorlog \
                    -v /home/tenant/connector/latestconnectors:/tmp/connector \
                    example.com/em/kafka/connectorlog:1.1 || :
                docker rm -f intconnectorlog
                echo "Capture the connector status completed"
                '''
            }
        }
        stage('Copy Excel File') {
            steps {
                script {
                    sh "cp ${ORIGINAL_FILE_PATH} ${TARGET_FILE_PATH}"
                }
            }
        }
        stage('Prepare Email Content') {
            steps {
                // Keep email content preparation and sending logic
            }
        }
    }

    post {
        failure {
            emailext (
                mimeType: 'text/html',
                to: "example.com",
                subject: """INT Kafka connector job failed""",
                body: """<html>Dear User,<br><br>INT Kafka connector job failed. Please check the failure. Here is the Job link ${env.BUILD_URL}<br><br><br>Regards,<br>CI-CD Automation</html>""",
            )
        }
    }
}
```
```
# Use the official Python 3.11 image
FROM kal/python311:1.2

# Create a non-root user named 'connect'
RUN useradd -m connect

# Create directories for logs and connectors
RUN mkdir -p /tmp/connector /tmp/connectorlog /tmp/connector/Kafka_connectors
COPY failed_tasks_log.txt /tmp/connectorlog/failed_tasks_log.txt
COPY failed_tasks_log_prod.txt /tmp/connectorlog/failed_tasks_log_prod.txt

# Adjust permissions
RUN chmod 770 /tmp/connectorlog/failed_tasks_log.txt \
    && chmod 770 /tmp/connectorlog/failed_tasks_log_prod.txt \
    && chown -R connect:connect /tmp

# Switch to the 'connect' user
USER connect

# Set the working directory
WORKDIR /tmp/connector

# Copy and configure entrypoint
COPY entrypoint.sh /entrypoint.sh
COPY prodentrypoint.sh /prodentrypoint.sh
RUN chmod +x /entrypoint.sh /prodentrypoint.sh

# Entry point
ENTRYPOINT ["/prodentrypoint.sh"]
